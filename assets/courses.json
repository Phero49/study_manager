"{\"Unit 1: Software Engineering, Algorithm Design and Analysis \": [\"Learning Outcome 1: Analyse how formal logic is used to define and verify requirements for software\", \"a.  Different forms of requirements specifications and documentation, including formal\", \"specification documents, software quality assurance (SQA) guides, and software quality plans (SQP)\", \"b.  Motivation for using formal methods to specify, develop, and verify requirements in software,\", \"including reliability and robustness assurance\", \"c.  Paradigms in formal specifications and the application of their techniques (including history-\", \"based, state-bases, transition-based, functional and operational)\", \"d.  Producing formal predicate logic to specify requirements and technical development\", \"programme\", \"e.  Interpreting logical statements to explain requirements  Learning Outcome 2: Evaluate the quality of source code written in a high-level language\", \"a.  Methods of proving an implementation of an algorithm against a defined pseudo-code\", \"description using formal methods and formal verification tools\", \"\", \"6\", \"\", \"b.  Methods of testing and analysing the asymptotic behaviour of an algorithm, both informally\", \"(code comments, documented descriptions, etc.) and formally (pre- and post- conditions, unit test suites, example code)\", \"c.  Assessing the quality of code in terms of three quality aspects: functional coherence;\", \"maintainability; and optimisation.\", \"\", \"Learning Outcome 3: Evaluate the algorithmic complexity of pseudo-code and its implications  a.  Problem hardness and the P=NP question b.  Analysing runtime time and space requirements of an algorithm given in pseudo-code using\", \"Big-O, Big-Omega, and Big-Theta notation\", \"c.  Practical implications of different run-time and memory complexities d.  The challenges associated with attempting to exhaustively test an algorithm, with references\", \"to the Halting problem\", \"e.  Run-time and memory complexities of common data structure operations (e.g. search a\", \"stack, linked list, n-tree, array, map, etc.) and sorting algorithms (e.g. bubble, radix, quick, insertion, merge, etc.)\", \"Learning Outcome 4: Analyse the process of source-code compilation into machine-code\", \"a.  Different forms of machine code including CISC and RISC b.  Basic assembly instructions for a RISC processor c.  The compilation process to convert HLL source code into assembly and/or object code d.  CPU and associated memory and I/O architecture e.  Principles and key components of low-level software and associated components\", \"\", \"Learning Outcome 5: Apply pseudo-code to describe the solution to a problem\", \"a.  Algorithm optimisation techniques, including divide-and-conquer and parallelisation b.  Problem solving techniques c.  Well-known computing problems including those associated with: bridge-and-torch problem,\", \"dining philosopher, travelling salesman, eight queens, towers of hanoi, waterfall, etc.\", \"d.  The key qualities and characteristics of sophisticated and maintainable pseudo-code\"], \"Unit 2: Enterprise Architecture \": [\"Learning Outcome 1: Analyse frameworks to develop enterprise architectures\", \"a.  Defining the scope of an organisation, including geographic areas in which goods or services\", \"are provided, the goods or services that an organisation provides, the activities that the organisation may or may not undertake (given its constitution/incorporation, legal scope, regulatory requirements/limitations), who the customers of such goods or services are, how an organisation is funded, and who the stakeholders are\", \"b.  The differences between the popular enterprise architecture frameworks such as Zachmann\", \"Framework for Enterprise Architectures, The Open Group Architecture Framework (TOGAF), Federal Enterprise Architecture (FEA), and Gartner (previously Meta Framework)\", \"c.  The role of architect and the process by which architects create and record artefacts in\", \"each framework\", \"d.  The principles of enterprise architectures e.  The reasons for developing an enterprise architecture: alignment, integration, change\", \"management, increased efficiency, rationalisation\", \"\", \"\", \"10\", \"\", \"Learning Outcome 2: Analyse the life cycle management process of an enterprise architecture\", \"a.  Enterprise architecture life cycle b.  The life cycle management process c.  The costs associated with running an enterprise architecture, including costs of developing\", \"an architecture from scratch, migration costs associated with moving to a new architecture, running costs of maintaining and developing an architecture, costs associated with running down/expiring/end-of-lifeing an architecture\", \"d.  Managing the storage of records and artefacts, using enterprise record management (ERM),\", \"meta-data, hierarchy, and linking within an ERM ontology\", \"e.  Managing documentation of outputs, including enterprise records systems  Learning Outcome 3: Analyse how to perform enterprise architecture modelling\", \"a.  Organisational systems for an enterprise architecture, including the ongoing development of\", \"data models representative of current systems\", \"b.  The storage and life cycle of an enterprise architecture, including assets such as diagrams,\", \"designs, lists, semantic/logical/physical models, dictionaries; producing interim and preliminary architectural products\", \"c.  The use, distribution, revision/updating and review of architectural assets, including\", \"publication and delivery\", \"d.  Organisational processes for analysing and updating an enterprise architecture, including\", \"the development of functional models, such as use cases, activity trees, business process models, and state models\", \"e.  The role of baseline and target architectures for an enterprise, including the value of straw-\", \"man products\", \"Learning Outcome 4: Evaluate how to develop strategic outputs from an enterprise architecture\", \"a.  Difference types of strategic output  b.  The ability of an enterprise architecture to meet future requirements c.  Estimate the return on investment (ROI) of an enterprise architecture quantifying the\", \"effectiveness of an enterprise architecture, including an awareness of the difficulties of measuring the effectiveness or impact of a programme delivering change\", \"d.  Frameworks by which to judge the effectiveness of an enterprise by quantitative and\", \"qualitative measures, including cost, critical operational issues, objectives met, impact measured or other bases\", \"e.  Management reports on enterprise architecture effectiveness\", \"Learning Outcome 5: Evaluate how to overcome the risks associated with enterprise architecture\", \"a.  Mitigate risks of an enterprise architecture b.  Analysing the risks of the enterprise architecture, including cost, personnel, execution,\", \"resource and other concerns\", \"c.  Prioritising the risks posed by the implementation of an architecture by cost and impact d.  Defining project compliance criteria and consequences e.  Identifying mitigating factors to risks posed\", \"\", \"\", \"\", \"11\", \"\"], \"Unit 3: Organisational Security \": [\"Learning Outcome 1: Analyse security threats and attack vectors that affect physical and electronic security\", \"a.  Types and sources of risk to IT systems via different attack vectors (e.g. email, network\", \"connection, storage media, social engineering, etc.)\", \"b.  Key human security threats (e.g. pretexting, quid pro quo, phishing, spoofing, trojans, cross-\", \"site scripts, etc.) and their associated risks\", \"c.  Key electronic security threats (e.g. viruses, worms, rootkits, man-in-the-middle, denial of\", \"service, etc.) and their associated risks\", \"d.  Appropriate countermeasures to key vulnerabilities in order to transfer, spread or reduce risk e.  Understanding when it is appropriate to accept risks; explaining methods of avoiding risks\", \"Learning Outcome 2: Analyse how to develop an IT security policy for an organisation\", \"a.  Developing an IT security policy and associated policy document b.  Processes to update/revise security policy, including key international security standards such\", \"as ISO/IEC 27001, and the \\u2018Plan-Do-Check-Act\\u2019 cycle\", \"c.  Auditing the performance of an organisation\\u2019s processes in terms of compliance of a security\", \"policy\", \"\", \"14\", \"\", \"d.  Reviewing the ability of the security policy to deliver risk mitigations e.  Recognising the need for periodic re-auditing of compliance and for continuous feedback\", \"Learning Outcome 3: Analyse the types and severities of security incidents that could affect an organisation\", \"a.  The different business processes within an organisation that are vulnerable to security risk and\", \"their respective criticality\", \"b.  Security requirements for a process based on policy, best-practice, industry,\", \"regulatory/legislative, or other forms of guidance (including data protection legislation)\", \"c.  Risks and implications associated with flawed authentication and password storage policies\", \"(e.g. high profile breaches including Adobe, Sony, etc.)\", \"d.  Implications of, and potential damages associated with, physical and environmental security\", \"(e.g. theft, vandalism, sabotage, fire, flood, etc.)\", \"e.  The concept of \\u2018defence in depth\\u2019 and how it relates to breach probabilities\", \"Learning Outcome 4: Evaluate processes that can be adopted to handle and review security incidents\", \"a.  Management and strategic responses to security incidents (including hazards such as fire) b.  Evaluating the severity of an incident and the appropriate initial responses to the incident in\", \"accordance with the security policy, including when and how to escalate responses to incidents as facts change and when to trigger external emergency responses\", \"c.  The on-the-ground process of incident response management d.  Conducting incident response investigations, collecting data about incident(s), generating a\", \"chronological report of the events during an incident, management analysis of an incident report, identifying adherence (or not) to security policy, and gaps in training, effectiveness, policy or resources\", \"e.  The roles of physical installations (obstacles, access controls, intrusion detection, security\", \"response, fire suppression, flood barriers, etc.)\", \"Learning Outcome 5: Evaluate how to test an organisation\\u2019s security processes\", \"a.  Methods of testing security (e.g., simulation, drill, etc.) b.  Breaking down a security policy by response type and procedure, designing scenarios that\", \"would trigger specific separate responses\", \"c.  Designing appropriate analogues of events that cannot be recreated (e.g. events leading to\", \"high levels of risk to personnel health and safety, events affecting the population at large)\", \"d.  Different types of simulation (e.g. open simulation, blind simulation) and the strengths and\", \"weaknesses of the different types\", \"e.  Evaluating the effectiveness of a policy or implementation on the basis of test results, and\", \"making recommendations\"], \"Unit 4: IT Project Management \": [\"\", \"Learning Outcome 1: Analyse the principles of project management\", \"a.  Principles of project management b.  Viability of projects including criteria for success and failure c.  Principles behind project systems and processes d.  Tools and software applications for managing IT projects e.  Conducting post-project appraisals\", \"Learning Outcome 2: Analyse how to start an IT project a.  Defining a project b.  Outlining the scope of the project c.  Justification for a project governance team d.  Deciding on the goals to be achieved by the project e.  Assessing the implications of the goals of the project\", \"\", \"Learning Outcome 3: Evaluate how to manage an IT project  a.  Different project management methodologies\", \"\", \"18\", \"\", \"b.  Choosing a methodology  c.  Producing project stages/milestones d.  Provide structure to the tasks within the project  e.  Provide an estimate of the time and approximate cost for each task\", \"\", \"Learning Outcome 4: Evaluate the collection of the output from an IT project   a.  Producing IT project plans b.  Allocating appropriate resource c.  Use of stage monitoring tools d.  Collection and managing of stage output e.  Reporting progress and outcomes\", \"\", \"Learning Outcome 5: Analyse how to close an IT project  a.  Critically assessing project progress b.  Critically assessing likely impact and actual outcomes  c.  Learning from experience d.  Writing final project report e.  Using experiences from the project to inform future projects\"], \"Unit 5: Scalable Web and e-Commerce \": [\"Learning Outcome 1: Analyse the web architectures underlying e-commerce platforms\", \"a.  Determining requirements for an online presence, including how to estimate space and\", \"computer requirements\", \"b.  Common web architectures , including single-server, single-tier, two-tier, and three-tier\", \"architectures\", \"c.  Motivations for ensuring the scalability of web platforms and associated key factors d.  Motivations for ensuring the availability of web platforms and associated key factors e.  Motivations for ensuring the performance of web platforms and associated key factors\", \"Learning Outcome 2: Analyse the quality attributes of e-commerce platforms and how to improve them\", \"a.  Assess the current and future capacity requirements for a web platform b.  Where analytics and monitoring should be deployed in order to provide accurate figures on\", \"average\", \"\", \"22\", \"\", \"c.  Strategies for improving scalability, including scalability dimensions, key tenets, scalability\", \"challenges, scalability best practices, scalability patterns, and a comprehensive process to achieve scalability, scaling vertically and horizontally\", \"d.  Strategies for improving availability, including architecture patterns, challenges and\", \"motivation for high availability, high availability governance process, monitoring infrastructure, and fallback and fault tolerance features\", \"e.  Strategies for improving performance, including web-performance optimisation,\", \"performance optimisation principles at each of the project life cycle phases, common pitfalls in page development, caching strategy, monitoring and maintenance strategy, infrastructure guidelines, and fine-tuning\", \"Learning Outcome 3: Evaluate how to monitor, maintain, and extend an e-commerce platform\", \"a.  Strategies for caching data at different points in the network, including caching patterns,\", \"layerwise caching techniques, and caching frameworks\", \"b.  Planning the deployment of a content distribution network for static resources c.  Planning the deployment of a distributed database, including references to Consistency /\", \"Availability / Partition tolerance (CAP theory) and Atomicity, Consistency, Isolation, Durability (ACID) attributes\", \"d.  Enterprise web application testing strategies e.  Operations and maintenance strategies for web platforms\", \"Learning Outcome 4: Evaluate how to ensure the security of an e-commerce platform\", \"a.  Protection of confidential data in web-accessible databases and server memory b.  Prevention of well-known internal and external attacks c.  Encryption standards and transaction processing, including Payment Card Industry Data\", \"Security Standard (PCI-DSS)\", \"d.  Best practices in security policy enforcement, including hardware and software precautions e.  Adverse implications of security incidents, including material loss, erosion of customer base,\", \"loss of customer trust/loyalty, compromised intellectual property, etc.\", \"Learning Outcome 5: Analyse the merits and limitations of service-driven approaches to e-commerce platform integration\", \"a.  Service-driven approaches to enterprise integration b.  Principles and foundations of service-driven approaches, including Service Oriented\", \"Architecture (SOA) and Representational State Transfer (RESTful) architectures\", \"c.  Functional units responsible for end-to-end platform and service provision  d.  Systems in end-to-end platform and service provision, including stock, supply chain, logistics,\", \"etc.\", \"e.  Points of integration with third-party services such as logistics, fulfilment, etc.\"]}"